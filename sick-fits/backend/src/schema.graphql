# import * from './generated/prisma.graphql'

type Query {
  me: User
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first: Int): [Item!]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  users: [User!]!
}

type Mutation {
  createItem(data: ItemCreateInput!): Item!
  updateItem(data: ItemUpdateInput!, where: ItemWhereUniqueInput!): Item
  deleteItem(id: ID!): Item
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
  addToCart(id: ID!): CartItem
  removeFromCart(id: ID!): CartItem
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  cart: [CartItem!]!
}

type SuccessMessage {
  message: String
}

input ItemCreateInput {
  title: String!
  description: String!
  price: Int!
  image: String
  largeImage: String
}

enum Permission {
  ADMIN
  USER
  ITEM_CREATE
  ITEM_UPDATE
  ITEM_DELETE
  PERMISSION_UPDATE
}
